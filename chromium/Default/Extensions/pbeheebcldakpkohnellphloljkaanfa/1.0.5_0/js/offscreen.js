(()=>{"use strict";const e="steam-service-accept-offer",r="steam-service-send-offer",t="steam-service-cancel-offer",o="steam-service-decline-offer",s="steam-service-get-offer-url",n="steam-service-get-web-api-key",a="steam-service-get-user-summaries",i="extension-session-get",c="declarative-net-requests-set-referer-header-rule",d="background-restart",f=()=>{function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},h="background-offscreen-connection",m=chrome.runtime.getURL("img/favicon_csgo.png");let l=function(e){return e.NoSteamAuth="SteamAuthMissing",e.ConfirmTradeOffer="ConfirmTradeOffer",e}({});const g=e=>{const r={};for(const[t,o]of Object.entries(e))Array.isArray(o)?r[t]=o.map((e=>String(e))).join(","):r[t]="string"==typeof o?o:String(o);return new URLSearchParams(r)},u=async e=>new Promise(((r,t)=>{const o=new XMLHttpRequest;o.onreadystatechange=function(){if(o.readyState===o.DONE)return r({body:o.response,code:o.status})},o.onerror=function(e){return t(e)},o.open("GET",e,!0),o.send("")})),p=async(e,r)=>new Promise(((t,o)=>{const s=new XMLHttpRequest;if(s.onreadystatechange=function(){if(s.readyState===s.DONE)return t({body:r?.json?JSON.parse(s.response):s.response,code:s.status})},s.onerror=function(e){return o(e)},s.open("POST",e,!0),s.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),r?.headers)for(const e of Object.keys(r.headers))s.setRequestHeader(e,r.headers[e]);s.send(r?.body)})),w=new class{async acceptOffer(e){try{const r=g(e);r.append("sessionid",await this.getSessionId());const t=`https://steamcommunity.com/tradeoffer/${e.tradeofferid}/accept`;await v.to.background.invoke(c,1,t,`https://steamcommunity.com/tradeoffer/${e.tradeofferid}/`);const o=await p(t,{body:r,json:!0});if(200!==o.code||o.body.strError)throw new Error(`Unable to accept trade offer (${o.body.strError})`);return{success:!0,data:o.body}}catch(e){return v.logger.error(e),{success:!1,error:e.message}}}async sendOffer(e){try{const t=g(e);t.append("sessionid",await this.getSessionId());const o="https://steamcommunity.com/tradeoffer/new/send";await v.to.background.invoke(c,2,o,"https://steamcommunity.com/tradeoffer/new/");const s=await p(o,{body:t,json:!0});if(v.logger.log(s),200!==s.code||!("tradeofferid"in s.body))throw new Error(`Unable to send trade offer (${"strError"in s.body?s.body.strError:"Code: "+String(s.code)})`);return r=`${l.ConfirmTradeOffer}_${s.body.tradeofferid}`,"New trade offer created","Open steam confirmator and accept the trade",chrome.notifications.create(r,{title:"New trade offer created",iconUrl:m,type:"basic",message:"Open steam confirmator and accept the trade"}),{success:!0,data:s.body}}catch(e){return v.logger.error(e),{success:!1,error:e.message}}var r}async cancelOffer(e){try{const r=new URLSearchParams;r.append("sessionid",await this.getSessionId());const t=`https://steamcommunity.com/tradeoffer/${e}/cancel`;await v.to.background.invoke(c,3,t,`https://steamcommunity.com/tradeoffer/${e}/`);const o=await p(t,{body:r,json:!0});if(200!==o.code||o.body.strError)throw new Error(`Unable to cancel trade offer (${o.body.strError})`);return{success:!0,data:o.body}}catch(e){return v.logger.error(e),{success:!1,error:e.message}}}async declineOffer(e){try{const r=new URLSearchParams;r.append("sessionid",await this.getSessionId());const t=`https://steamcommunity.com/tradeoffer/${e}/decline`;await v.to.background.invoke(c,4,t,`https://steamcommunity.com/tradeoffer/${e}/`);const o=await p(t,{body:r,json:!0});if(200!==o.code||o.body.strError)throw new Error(`Unable to decline trade offer (${o.body.strError})`);return{success:!0,data:o.body}}catch(e){return v.logger.error(e),{success:!1,error:e.message}}}async getOfferUrl(){const e=await u("https://steamcommunity.com/my/tradeoffers/privacy");if(200!==e.code||!e.body)throw new Error("Bad Response");const r=document.createElement("div");r.innerHTML=e.body;const t=r.querySelector("#trade_offer_access_url");if(!t||!("value"in t))throw new Error("Missing trade offer URL");const o=t.value;if(!o)throw new Error("Missing trade offer URL");return Array.isArray(o)?o[0]:o}async getWebApiKey(){const{code:e,body:r}=await u("https://steamcommunity.com/dev/apikey?l=english");if(200!==e||!r)throw new Error(`Bad Response ${e}`);if(r.match(/<h2>Access Denied<\/h2>/))throw new Error("Access Denied");if(r.match(/You must have a validated email address to create a Steam Web API key./))throw new Error("You must have a validated email address to create a Steam Web API key.");const t=r.match(/<p>Key: ([0-9A-F]+)<\/p>/);if(!t)throw new Error("Unable to get Steam Web API key.");return t[1]}async getUserSummaries(){const{code:e,body:r}=await u("https://steamcommunity.com/my/profiles/"),t={};if(200!==e||!r)throw new Error("Bad Response");const o=document.createElement("div");o.innerHTML=r;const s=o.querySelector(".playerAvatarAutoSizeInner>img");s&&"src"in s&&"string"==typeof s.src&&(t.avatarUrl=s.src);const n=o.querySelector(".actual_persona_name");return n&&n.textContent&&(t.username=n.textContent),t}async getSessionId(){const{profile:e}=await v.to.background.invoke(i);if(!e||!e.sessionId)throw new Error("Missing session id");return e.sessionId}},y=new class{pool=[];constructor(e="default",r=!1){this.source=e,this.debug=r}add(e){const r=[];for(let t=0;t<e.length;t++){let o=e[t];"string"!=typeof o&&(o=JSON.stringify(o)),r.push(o)}this.pool.push((new Date).toISOString()+" "+r.join(" ")),this.pool.length>200&&this.pool.splice(0,1)}appendPrefix(e){return[`[${(new Date).toISOString()}][${this.source}]`,...e]}log(...e){this.debug&&console.log(...this.appendPrefix(e)),this.add(e)}warn(...e){this.debug&&console.warn(...this.appendPrefix(e)),this.add(e)}error(...e){this.debug&&console.error(...this.appendPrefix(e)),this.add(e)}}("offscreen",!1),b="firefox"===(()=>{const e=navigator.userAgent;return e.match(/chrome|chromium|crios/i)?"chrome":e.match(/firefox|fxios/i)?"firefox":e.match(/safari/i)?"safari":e.match(/opr/i)?"opera":e.match(/edg/i)?"edge":void 0})()?new class{listeners=new Map;constructor(e,r){this.portName=e,this.logger=r,window&&!window.nativeCommunicationStore&&(window.nativeCommunicationStore=[]);const t=window.nativeCommunicationStore.find((r=>r.portName===e));if(t)return t;window.nativeCommunicationStore.push(this)}get isConnected(){return!0}connect(e){}addListener(e,r){this.logger.log("Listener added: ",e),this.listeners.set(e,r)}removeListener(e){this.listeners.delete(e)}async invoke(e,...r){this.logger.log("Invoke: ",e);const t=this.listeners.get(e);if(!t)throw new Error("Unable to invoke listener for "+e);return await t(...r)}async send(e,...r){this.logger.log("Send: ",e);const t=this.listeners.get(e);t?await t(...r):this.logger.warn("Unable to send data to listener "+e)}}(h,y):new class{responseHandlers=new Map;requestHandlers=new Map;constructor(e,r){this.logger=r,chrome.runtime.onConnect.addListener((r=>{r.name===e&&this.onConnect(r)}))}get isConnected(){return!!this.port}connect(e){const r=chrome.runtime.connect({name:e});this.onConnect(r)}onConnect(e){this.port&&this.port.disconnect(),this.logger.log("New connection: ",e.name),this.port=e,this.port.onMessage.addListener((e=>(this.reducer(e),!0))),this.port.onDisconnect.addListener((()=>{this.logger.log("Disconnected with: "+String(this.port?.name));for(const e of Array.from(this.requestHandlers.values()))e[1].abort(new Error("Port has been disconnected"));this.requestHandlers.clear(),this.port&&"error"in this.port&&this.port.error&&this.logger.error(this.port.error),this.port=void 0}))}addListener(e,r){this.responseHandlers.set(e,r),this.logger.log("Listener added: ",e)}removeListener(e){this.responseHandlers.delete(e)}async invoke(e,...r){this.logger.log("Invoke: ",e);const t=f();this.port?.postMessage({channel:e,payload:r??[],id:t});const o=new AbortController;return await new Promise(((e,r)=>{o.signal.onabort=e=>{r(e.currentTarget.reason)},this.requestHandlers.set(t,[r=>{this.requestHandlers.delete(t),e(r)},o])}))}async send(e,...r){this.logger.log("Send: ",e);const t=f();this.port?.postMessage({channel:e,payload:r??[],id:t})}async reducer(e){if("response"in e||"error"in e){const r=this.requestHandlers.get(e.id);if(!r)return;if("error"in e){const t=new Error;return t.name=e.name,t.message=e.message,t.stack=e.stack,void r[1].abort(t)}return void r[0](e.payload)}const r=this.responseHandlers.get(e.channel);if(r)try{const t=await r(...e.payload);this.port?.postMessage({id:e.id,response:!0,channel:e.channel,payload:t})}catch(r){this.port?.postMessage({id:e.id,error:!0,message:r.message,name:r.name,stack:r.stack,channel:e.channel})}else{this.logger.warn(`Unable to resolve reducer for "${e.channel}"`);const r=new Error(`Unable to resolve reducer for "${e.channel}"`);this.port?.postMessage({id:e.id,error:!0,message:r.message,name:r.name,stack:r.stack,channel:e.channel})}}}(h,y);b.addListener(e,w.acceptOffer.bind(w)),b.addListener(r,w.sendOffer.bind(w)),b.addListener(t,w.cancelOffer.bind(w)),b.addListener(o,w.declineOffer.bind(w)),b.addListener(s,w.getOfferUrl.bind(w)),b.addListener(n,w.getWebApiKey.bind(w)),b.addListener(a,w.getUserSummaries.bind(w));const v={logger:y,to:{background:b}};v.logger.log("Offscreen API has been loaded"),window.onbeforeunload=()=>{v.to.background.invoke(d)}})();